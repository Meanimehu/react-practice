/ import React from "react";

// const BarChart = () => {
//   const SVG_WIDTH = 400;
//   const SVG_HEIGHT = 300;

//   const data = [
//     ["Mon", [{a1:42,color:"blue"},{a1:42,color:"red"}]],
//     ["Tue", [{a1:20,color:"blue"},{a1:54,color:"red"}]],
//     ["Wed", [{a1:11,color:"blue"},{a1:11,color:"red"}]],
//     ["Thu", [{a1:25,color:"blue"},{a1:25,color:"red"}]],
//     ["Fri", [{a1:30,color:"blue"},{a1:22,color:"red"}]],
//     ["Sat", [{a1:62,color:"blue"},{a1:21,color:"red"}]],
//     ["Sun", [{a1:46,color:"blue"},{a1:36,color:"red"}]],
//   ];
//   const x0 = 50;
//   const xAxisLength = SVG_WIDTH - x0 * 2;

//   const y0 = 50;
//   const yAxisLength = SVG_HEIGHT - y0 * 2;

//   console.log(xAxisLength, yAxisLength);
//   const xAxisY = y0 + yAxisLength;

//   // const dataYMax = data.reduce(
//   //   (currMax, [_, dataY]) => Math.max(currMax, dataY),
//   //   -Infinity
//   // );
//   // const dataYMin = data.reduce(
//   //   (currMin, [_, dataY]) => Math.min(currMin, dataY),
//   //   Infinity
//   // );

//   const dataYMax = 100;
//   const dataYMin = 0;

//   const dataYRange = dataYMax - dataYMin;
//   console.log("DataYmin: ", dataYMin, dataYRange);

//   const numYTicks = 5;

//   const barPlotWidth = xAxisLength / data.length;

//   return (
//     <svg width={SVG_WIDTH} height={SVG_HEIGHT}>
//       {/* X axis */}
//       <line
//         x1={x0}
//         y1={xAxisY}
//         x2={x0 + xAxisLength}
//         y2={xAxisY}
//         stroke="grey"
//       />
//       <text x={x0 + xAxisLength + 5} y={xAxisY + 4}>
//         Day
//       </text>

//       {/* Y axis */}
//       <line x1={x0} y1={y0} x2={x0} y2={y0 + yAxisLength} stroke="grey" />
//       {/* {dataYValues.map((yValue, index) => {
//           const y = y0 + (1 - (yValue - dataYMin) / dataYRange) * yAxisLength;

//           return (
//             <g key={index}>
//               <line x1={x0} y1={y} x2={x0 - 5} y2={y} stroke="grey" />
//               <text x={x0 - 5} y={y + 5} textAnchor="end">
//                 {yValue}
//               </text>
//             </g>
//           );
//         })} */}
//       {Array.from({ length: numYTicks }).map((_, index) => {
//         //  {dataYValues.map((yValue, index) => {
//         const y = y0 + index * (yAxisLength / numYTicks);

//         const yValue = Math.round(dataYMax - index * (dataYRange / numYTicks));

//         console.log("yValue: ", yValue);

//         return (
//           <g key={index}>
//             <line x1={x0} y1={y} x2={x0 - 5} y2={y} stroke="grey" />
//             <text x={x0 - 5} y={y + 5} textAnchor="end">
//               {yValue}
//             </text>
//           </g>
//         );
//       })}
//       <text x={x0} y={y0 - 8} textAnchor="middle">
//         $
//       </text>

//       {/* Bar plots */}
//       {data.map(([day, dataY], index) => {
//         const x = x0 + index * barPlotWidth;
//         let total = 0;
//         dataY.forEach((element) => {
//           total += element.a1;
//         });
//         const yRatio = (total - dataYMin) / dataYRange;

//         const y = y0 + (1 - yRatio) * yAxisLength;
//         const height = yRatio * yAxisLength;
//         console.log("yRatio", height, yRatio, yAxisLength,total,y);

//         const sidePadding = 10;

//         return (
//           <g key={index}>
//             {dataY.map((item, i) => (
//                 <rect
//                 x={x + sidePadding / 2}
//                 y={y}
//                 width={barPlotWidth - sidePadding}
//                 height={item.a1*2}
//                 fill={item.color}
//               />
//             ))}
            
//             <text x={x + barPlotWidth / 2} y={xAxisY + 16} textAnchor="middle">
//               {day}
//             </text>
//           </g>
//         );
//       })}
//     </svg>
//   );
// };

// export default BarChart;